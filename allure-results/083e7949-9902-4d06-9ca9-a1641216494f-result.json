{"name": "TC009 - Logging in using old password after creating new password", "status": "failed", "statusDetails": {"message": "Failed: Login failed - URL did not change to dashboard", "trace": "setup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"1eba8ad2-3ad9-49fc-b172-17cdb692ef6a\")>\n\n    @allure.feature(\"XEED_Ventures_Login_Page\")\n    @allure.title(\"TC009 - Logging in using old password after creating new password\")\n    @allure.description(\"\"\"\n    **Test Type**\n    Funtional and cross browser\n    \n    **Test Scenario**\n    New password is created using forgot password but still try to login using old password to check whether old password is still in place or not\n    \n    **Expected Result**\n    Shouldn't be able to login using old password\n    \n    **How it is evaluated*8\n    Will check whether url adds \"/dashboard\" at the end of url after logging in if it doesnt add it means its working as expected\n    \"\"\")\n    \n    def test_suite(setup):\n        driver = setup\n        wait = WebDriverWait(driver,10)\n    \n        with allure.step(\"Login Page is opened\"):\n            driver.get(\"http://157.15.202.244:99/authentication/login\")\n    \n        with allure.step(\"Clicking on Forgot password link\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//a[normalize-space()='Forgot Password?']\")))\n            element.click()\n    \n        with allure.step(\"Reaching the email element in pop up window of forgot password\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@formcontrolname='email']\")))\n            element.click()\n    \n        with allure.step(\"Entering the email\"):\n            element.send_keys(\"Sk12@gmail.com\")\n    \n        with allure.step(\"Reaching the new password element\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@formcontrolname='newPassword']\")))\n    \n        with allure.step(\"Entering the new password\"):\n            element.send_keys(\"Sk@123\")\n    \n        with allure.step(\"Reaching the confirm password element\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@formcontrolname='confirmPassword']\")))\n    \n        with allure.step(\"Entering the same password\"):\n            element.send_keys(\"Sk@123\")\n    \n        with allure.step(\"Click on submit button\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[normalize-space()='Submit']\")))\n            element.click()\n    \n        with allure.step(\"Closing the successfull password reset pop up window\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//mat-icon[@role='img']\")))\n            element.click()\n    \n        with allure.step(\"Reaching the email element\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@id='email']\")))\n            element.click()\n    \n        with allure.step(\"Entering the email\"):\n            element.send_keys(\"Sk12@gmail.com\")\n    \n    \n        with allure.step(\"Reaching the password element\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@id='password']\")))\n    \n        with allure.step(\"Entering the old password\"):\n            element.send_keys(\"Sk@123654\")\n    \n        with allure.step(\"Click on Login\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[normalize-space()='Login']\")))\n            element.click()\n    \n        with allure.step(\"Wait for URL to change to Dashboard\"):\n            try:\n>               wait.until(EC.url_contains(\"/dashboard\"))\n\nXeed_Login_Page\\Test_TC009.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1eba8ad2-3ad9-49fc-b172-17cdb692ef6a\")>, method = <function url_contains.<locals>._predicate at 0x000001B62FDCDC60>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nsetup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"1eba8ad2-3ad9-49fc-b172-17cdb692ef6a\")>\n\n    @allure.feature(\"XEED_Ventures_Login_Page\")\n    @allure.title(\"TC009 - Logging in using old password after creating new password\")\n    @allure.description(\"\"\"\n    **Test Type**\n    Funtional and cross browser\n    \n    **Test Scenario**\n    New password is created using forgot password but still try to login using old password to check whether old password is still in place or not\n    \n    **Expected Result**\n    Shouldn't be able to login using old password\n    \n    **How it is evaluated*8\n    Will check whether url adds \"/dashboard\" at the end of url after logging in if it doesnt add it means its working as expected\n    \"\"\")\n    \n    def test_suite(setup):\n        driver = setup\n        wait = WebDriverWait(driver,10)\n    \n        with allure.step(\"Login Page is opened\"):\n            driver.get(\"http://157.15.202.244:99/authentication/login\")\n    \n        with allure.step(\"Clicking on Forgot password link\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//a[normalize-space()='Forgot Password?']\")))\n            element.click()\n    \n        with allure.step(\"Reaching the email element in pop up window of forgot password\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@formcontrolname='email']\")))\n            element.click()\n    \n        with allure.step(\"Entering the email\"):\n            element.send_keys(\"Sk12@gmail.com\")\n    \n        with allure.step(\"Reaching the new password element\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@formcontrolname='newPassword']\")))\n    \n        with allure.step(\"Entering the new password\"):\n            element.send_keys(\"Sk@123\")\n    \n        with allure.step(\"Reaching the confirm password element\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@formcontrolname='confirmPassword']\")))\n    \n        with allure.step(\"Entering the same password\"):\n            element.send_keys(\"Sk@123\")\n    \n        with allure.step(\"Click on submit button\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[normalize-space()='Submit']\")))\n            element.click()\n    \n        with allure.step(\"Closing the successfull password reset pop up window\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//mat-icon[@role='img']\")))\n            element.click()\n    \n        with allure.step(\"Reaching the email element\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@id='email']\")))\n            element.click()\n    \n        with allure.step(\"Entering the email\"):\n            element.send_keys(\"Sk12@gmail.com\")\n    \n    \n        with allure.step(\"Reaching the password element\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@id='password']\")))\n    \n        with allure.step(\"Entering the old password\"):\n            element.send_keys(\"Sk@123654\")\n    \n        with allure.step(\"Click on Login\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[normalize-space()='Login']\")))\n            element.click()\n    \n        with allure.step(\"Wait for URL to change to Dashboard\"):\n            try:\n                wait.until(EC.url_contains(\"/dashboard\"))\n            except:\n                allure.attach(driver.current_url, name = \"Current URL on failure\", attachment_type=allure.attachment_type.TEXT)\n>               pytest.fail(\"Login failed - URL did not change to dashboard\")\nE               Failed: Login failed - URL did not change to dashboard\n\nXeed_Login_Page\\Test_TC009.py:83: Failed"}, "description": "\n**Test Type**\nFuntional and cross browser\n\n**Test Scenario**\nNew password is created using forgot password but still try to login using old password to check whether old password is still in place or not\n\n**Expected Result**\nShouldn't be able to login using old password\n\n**How it is evaluated*8\nWill check whether url adds \"/dashboard\" at the end of url after logging in if it doesnt add it means its working as expected\n", "steps": [{"name": "Login Page is opened", "status": "passed", "start": 1750072304661, "stop": 1750072307072}, {"name": "Clicking on Forgot password link", "status": "passed", "start": 1750072307072, "stop": 1750072307436}, {"name": "Reaching the email element in pop up window of forgot password", "status": "passed", "start": 1750072307436, "stop": 1750072307685}, {"name": "Entering the email", "status": "passed", "start": 1750072307685, "stop": 1750072307713}, {"name": "Reaching the new password element", "status": "passed", "start": 1750072307713, "stop": 1750072307730}, {"name": "Entering the new password", "status": "passed", "start": 1750072307730, "stop": 1750072307756}, {"name": "Reaching the confirm password element", "status": "passed", "start": 1750072307757, "stop": 1750072307779}, {"name": "Entering the same password", "status": "passed", "start": 1750072307779, "stop": 1750072307824}, {"name": "Click on submit button", "status": "passed", "start": 1750072307824, "stop": 1750072308115}, {"name": "Closing the successfull password reset pop up window", "status": "passed", "start": 1750072308116, "stop": 1750072308344}, {"name": "Reaching the email element", "status": "passed", "start": 1750072308344, "stop": 1750072308570}, {"name": "Entering the email", "status": "passed", "start": 1750072308571, "stop": 1750072308590}, {"name": "Reaching the password element", "status": "passed", "start": 1750072308590, "stop": 1750072308605}, {"name": "Entering the old password", "status": "passed", "start": 1750072308606, "stop": 1750072308623}, {"name": "Click on Login", "status": "passed", "start": 1750072308623, "stop": 1750072308852}, {"name": "Wait for URL to change to Dashboard", "status": "failed", "statusDetails": {"message": "Failed: Login failed - URL did not change to dashboard\n", "trace": "  File \"C:\\Users\\sagar\\PycharmProjects\\TestingProject\\Xeed_Login_Page\\Test_TC009.py\", line 83, in test_suite\n    pytest.fail(\"Login failed - URL did not change to dashboard\")\n    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\sagar\\PycharmProjects\\TestingProject\\venv\\Lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "Current URL on failure", "source": "3c915e6c-a1ff-454c-83db-930704532128-attachment.txt", "type": "text/plain"}], "start": 1750072308853, "stop": 1750072318910}], "parameters": [{"name": "setup", "value": "'chrome'"}], "start": 1750072304661, "stop": 1750072318911, "uuid": "a8166d8f-dd83-450a-a3ad-d5c62c324740", "historyId": "2cc222d64bd59b9559bbd7327bbe4bf8", "testCaseId": "6168dbd9b36e0adabde2433597cca72b", "fullName": "Xeed_Login_Page.Test_TC009#test_suite", "labels": [{"name": "feature", "value": "XEED_Ventures_Login_Page"}, {"name": "parentSuite", "value": "Xeed_Login_Page"}, {"name": "suite", "value": "Test_TC009"}, {"name": "host", "value": "DESKTOP-0Q1NQ4H"}, {"name": "thread", "value": "8092-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Xeed_Login_Page.Test_TC009"}]}